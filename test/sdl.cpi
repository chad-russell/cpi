module sdl {
    -- todo(chad): @Hack we need aliases with proper type specifications...
    alias SDL_INIT_EVERYTHING cast(i32) 29233
    alias SDL_QUIT cast(i32) 256
    alias SDL_KEYDOWN cast(i32) 768
    alias SDLK_RIGHT cast(i32) 1073741903
    alias SDLK_LEFT cast(i32) 1073741904
    alias SDLK_UP cast(i32) 1073741906
    alias SDLK_DOWN cast(i32) 1073741905

    fn SDL_Init(flags: i32) i32
    fn SDL_CreateWindow(name: *i8, x: i32, y: i32, w: i32, h: i32, flags: i32) *none
    fn SDL_CreateRenderer(window: *none, index: i32, flags: i32) *none
    fn SDL_RenderSetLogicalSize(renderer: *none, width: i32, height: i32) none
    fn SDL_SetRenderDrawColor(renderer: *none, r: i8, g: i8, b: i8, a: i8) none
    fn SDL_PollEvent(event: *SDL_KeyboardEvent) i32
    fn SDL_RenderClear(renderer: *none) none
    fn SDL_RenderFillRect(renderer: *none, playerPos: *SDL_Rect) none
    fn SDL_RenderPresent(renderer: *none) none

    type SDL_Rect struct {
        x: i32,
        y: i32,
        w: i32,
        h: i32
    }

    type SDL_KeyboardEvent struct {
        _type: i32,
        timetamp: i32,
        windowId: i32,
        state: i8,
        repeat: i8,
        padding2: i8,
        padding3: i8,
        keysym: SDL_Keysym
    }

    type SDL_Keysym struct {
        scancode: i32,
        sym: i32,
        mod1: i8,
        mod2: i8,
        unused: i32
    }
}

fn runGame() {
    winX: i32 = 100;
    winY: i32 = 200;
    sizeX: i32 = 300;
    sizeY: i32 = 400;

    sdl.SDL_Init(sdl.SDL_INIT_EVERYTHING);
    window := sdl.SDL_CreateWindow(cast(*i8) "foo\0".data, winX, winY, sizeX, sizeY, cast(i32) 0);
    renderer := sdl.SDL_CreateRenderer(window, cast(i32) -1, cast(i32) 0);

    sdl.SDL_RenderSetLogicalSize(renderer, sizeX, sizeY);
    sdl.SDL_SetRenderDrawColor(renderer, 0, 255, 50, 255);

    playerPos: sdl.SDL_Rect;
    playerPos.x = 20;
    playerPos.y = 20;
    playerPos.w = 50;
    playerPos.h = 20;

    keydown := 0;

    loop := true;
    while loop
    {
        event: sdl.SDL_KeyboardEvent;
        while sdl.SDL_PollEvent(&event) != 0
        {
            if event._type == sdl.SDL_QUIT {
                loop = false;
            }
            else if event._type == sdl.SDL_KEYDOWN
            {
                if event.keysym.sym == sdl.SDLK_RIGHT {
                    playerPos.x = playerPos.x + 10;
                }
                else if event.keysym.sym == sdl.SDLK_LEFT {
                    playerPos.x = playerPos.x - 10;
                }
                else if event.keysym.sym == sdl.SDLK_UP {
                    playerPos.y = playerPos.y - 10;
                }
                else if event.keysym.sym == sdl.SDLK_DOWN {
                    playerPos.y = playerPos.y + 10;
                }

                keydown = keydown + 1;
            }

            sdl.SDL_RenderClear(renderer);
            sdl.SDL_SetRenderDrawColor(renderer, 100, 140, 255, 255);
            sdl.SDL_RenderFillRect(renderer, &playerPos);
            sdl.SDL_SetRenderDrawColor(renderer, 155, 225, 155, 255);
            sdl.SDL_RenderPresent(renderer);
        }
    }

    return keydown;
}

fn main() {
    return runGame();
}