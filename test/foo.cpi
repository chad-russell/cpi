fn getField2(i: i64, T := typeof(t))(t: T) {
    return t[0];
}

fn getField(i: i64, T := typeof(t))(t: T) {
    return getField2!(i)(t);
}

fn main() {
    thing := {x: 14};

    s := 0;
    #for it, i: #fieldsof(typeof(thing)) {
        x: typeof(getField!(i)(thing)) = thing[0];
        s = s + x;
    }

    return s;
}

fn println(s: []i8) {
    puts(s); puts("\n");
}

fn assert(b: bool) {
    if b == false { panic(); }
}
