#import "buffer": buf;

enum NodeType(u8) {
    NONE,
    SPEAKER,
    SIN,
    SAW,
    SQUARE,
}

type EID i64

type Node struct {
    id: EID,
    type: NodeType,
}

type Connection struct {
    from: EID,
    to: EID
}

type MaudEngine struct {
    nodes: buf.Buffer!(Node),
    connections: buf.Buffer!(Connection),
    topological: buf.Buffer!(EID),
}

#context maud_engine: MaudEngine

fn add_node() {

}

fn add_connection() {

}

fn remove_connection() {

}

fn tug(n: *Node) {
    children :=
}
