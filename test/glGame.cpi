#import "printing": p;
#import "gl";

fn makeWindow() {
    window: gl.Window;

    if !gl.glfwInit() {
        p.println("Failed to init GLFW.");
        panic();
    }

    gl.glfwWindowHint(gl.GLFW_CONTEXT_VERSION_MAJOR, 3);
    gl.glfwWindowHint(gl.GLFW_CONTEXT_VERSION_MINOR, 2);
    gl.glfwWindowHint(gl.GLFW_OPENGL_DEBUG_CONTEXT, 1);

    window = gl.glfwCreateWindow(1000, 600, "cpi-gl\0".data);
    if window == cast(gl.Window) nil {
        p.println("Failed to create window.");
        gl.glfwTerminate();
        panic();
    }

    gl.glfwMakeContextCurrent(window);

    return window;
}

fn mainLoop(window: gl.Window) {
    while !gl.glfwWindowShouldClose(window) {
        mx: i32;
        my: i32;
        gl.glfwGetCursorPos(window, &mx, &my);

        winWidth: i32;
        winHeight: i32;
        gl.glfwGetWindowSize(window, &winWidth, &winHeight);

        fbWidth: i32;
        fbHeight: i32;
        gl.glfwGetFramebufferSize(window, &fbWidth, &fbHeight);

        gl.glViewport(0, 0, fbWidth, fbHeight);
        gl.glClearColor(0.4, 0.7, 0.9, 1.0);
        gl.glClear(gl.GL_COLOR_BUFFER_BIT);
        gl.glfwSwapBuffers(window);
        gl.glfwPollEvents();
    }
}
